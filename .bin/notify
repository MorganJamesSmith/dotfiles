#!/bin/sh
#Simple dunst notifications for some basic stuff
#Written by Morgan Smith :D
#Use however you'd like! (but no warranty, use at your own risk!)

if [ -n "$1" ]
then
	case $1 in
		"mute")
			notify-send "$( [ "$(pulsemixer --get-mute)" -ne 0 ] && echo "Muted!" || echo "Unmuted!")"
			;;
		"volume")
			notify-send "Volume: $(pulsemixer --get-volume | awk '{print $1}')%"
			;;
		"mic")
			notify-send "$( [ "$(amixer -c 0 get 'Capture' | grep \[on\] -c)" -gt 0 ] && echo "Mic On" || echo "Mic Off")"
			;;
		"song")
			notify-send "$(mpc current)"
			;;
		"songstatus")
			notify-send "$(mpc status | sed 2q)"
			;;
		"songplaying")
			notify-send "$(mpc status | awk 'FNR==2{print $1}' | tr -d '[]')"
			;;
		"backlight")
			notify-send "Brightness: $(xbacklight -get | awk '{printf "%.0f", $1}')%"
			;;
		*)
			#print out the return of the command passed. This can be useful when mixed with dmenu
			#ex. use dmenu to run "notify ps -a" to quickly see everything that's running
			notify-send "$("$@")"
	esac

else
	echo "Usage: $0 <Type of notification>"
fi
